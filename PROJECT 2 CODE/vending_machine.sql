-- MySQL Script generated by MySQL Workbench
-- Fri Nov 22 11:04:35 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema vending_machine
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema vending_machine
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vending_machine` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `vending_machine` ;

-- -----------------------------------------------------
-- Table `vending_machine`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`location` (
  `location_id` INT NOT NULL AUTO_INCREMENT,
  `school` VARCHAR(45) NOT NULL,
  `block` INT NOT NULL,
  `floor` INT NOT NULL,
  PRIMARY KEY (`location_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`status` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`vending_machine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`vending_machine` (
  `vending_machine_id` INT NOT NULL AUTO_INCREMENT,
  `location_id` INT NULL,
  `vendor_name` VARCHAR(255) NULL,
  `status_id` INT NULL,
  PRIMARY KEY (`vending_machine_id`),
  INDEX `location_id_idx` (`location_id` ASC) VISIBLE,
  INDEX `status_id_idx` (`status_id` ASC) VISIBLE,
  CONSTRAINT `location_id`
    FOREIGN KEY (`location_id`)
    REFERENCES `vending_machine`.`location` (`location_id`)
    ON DELETE SET NULL
    ON UPDATE RESTRICT,
  CONSTRAINT `status_id`
    FOREIGN KEY (`status_id`)
    REFERENCES `vending_machine`.`status` (`status_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`payment_method`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`payment_method` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `payment_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`payment_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`item` (
  `item_id` INT NOT NULL AUTO_INCREMENT,
  `item_name` VARCHAR(100) NULL,
  `item_cost` DECIMAL(5,2) NOT NULL,
  `item_image` VARCHAR(255) NOT NULL,
  `availability` TINYINT NULL,
  `item_quantity` INT NULL,
  PRIMARY KEY (`item_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`vending_payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`vending_payment` (
  `vending_payment_id` INT NOT NULL AUTO_INCREMENT,
  `vending_id` INT NULL,
  `payment_id` INT NULL,
  PRIMARY KEY (`vending_payment_id`),
  INDEX `vending_id_idx` (`vending_id` ASC) VISIBLE,
  INDEX `payment_id_idx` (`payment_id` ASC) VISIBLE,
  CONSTRAINT `vending_id`
    FOREIGN KEY (`vending_id`)
    REFERENCES `vending_machine`.`vending_machine` (`vending_machine_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `payment_id`
    FOREIGN KEY (`payment_id`)
    REFERENCES `vending_machine`.`payment_method` (`payment_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`vending_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`vending_item` (
  `vending_item_id` INT NOT NULL AUTO_INCREMENT,  -- Added AUTO_INCREMENT
  `vending_machine_id` INT NULL,
  `item_id` INT NULL,
  PRIMARY KEY (`vending_item_id`),
  INDEX `vending_machine_id_idx` (`vending_machine_id` ASC) VISIBLE,
  INDEX `item_id_idx` (`item_id` ASC) VISIBLE,
  CONSTRAINT `vending_machine_id`
    FOREIGN KEY (`vending_machine_id`)
    REFERENCES `vending_machine`.`vending_machine` (`vending_machine_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `item_id`
    FOREIGN KEY (`item_id`)
    REFERENCES `vending_machine`.`item` (`item_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vending_machine`.`subscribers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vending_machine`.`subscribers` (
  `subscriber_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL UNIQUE,
  `subscribed_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`subscriber_id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO `location` (school, block, floor) VALUES
('Engine', 11, 1),
('Design', 28, 1),
('Business', 26, 1),
('Engine', 25, 1),
('Applied Science', 8, 1),
('Informatics & IT', 3, 1);


INSERT INTO `item` (item_name, item_cost, item_image, availability, item_quantity) VALUES
('Coke', 1.70, '"C:\Users\Hamsi\OneDrive\ドキュメント\MODULES Y1S2\ADEV BDAV\PROJECT 2\item_photos\coke.jpg"', 1, 50),
('Sprite', 1.70, '"C:\Users\Hamsi\OneDrive\ドキュメント\MODULES Y1S2\ADEV BDAV\PROJECT 2\item_photos\sprite.jpg"', 1, 50),
('Green Tea', 2.00, '"C:\Users\Hamsi\OneDrive\ドキュメント\MODULES Y1S2\ADEV BDAV\PROJECT 2\item_photos\greentea.jpg"', 1, 50),
('Water', 2.00, '"C:\Users\Hamsi\OneDrive\ドキュメント\MODULES Y1S2\ADEV BDAV\PROJECT 2\item_photos\water.jpg"', 1, 50),
('Milo', 1.20, '"C:\Users\Hamsi\OneDrive\ドキュメント\MODULES Y1S2\ADEV BDAV\PROJECT 2\item_photos\milo.jpg"', 1, 50);

INSERT INTO `status` (status_name) VALUES
('Out of Service'),
('Operational');

-- Insert data into the 'payment_method' table
INSERT INTO `payment_method` (payment_name) VALUES
('Cash'),
('Apple Pay'),
('PayNow'),
('EZ Link');

INSERT INTO `vending_machine` (location_id, vendor_name, status_id) VALUES
(1, 'DRINKIT', 1),
(2, 'MAJESTICTRADERSG', 1),
(3, 'MINIGROUP', 1),
(4, 'DRINKIT', 1), 
(5, 'MINIGROUP', 1),
(6, 'MAJESTICTRADERSG', 1);

INSERT INTO `vending_item` (vending_machine_id, item_id) VALUES
(1, 1), (1, 2), (1, 3), 
(2, 1), (2, 2), (2, 3), (2, 4), (2, 5),
(3, 3), (3, 4), (3, 5),
(4, 2), (4, 3), (4, 4), (4, 5),
(5, 1), (5, 2), (5, 3), (5, 4), (5, 5),
(6, 1), (6, 2), (6, 4), (6, 5);

INSERT INTO `vending_payment` (vending_id, payment_id) VALUES
(1, 2), -- Vending machine ID 1 (DRINKIT) with Apple Pay
(1, 3), -- Vending machine ID 1 (DRINKIT) with PayNow
(1, 4), -- Vending machine ID 1 (DRINKIT) with EZ Link
(2, 1), -- Vending machine ID 2 (MAJESTICTRADERSG) with Cash
(2, 3), -- Vending machine ID 2 (MAJESTICTRADERSG) with Apple Pay
(3, 2), -- Vending machine ID 3 (MINIGROUP) with PayNow
(4, 2), -- Vending machine ID 4 (DRINKIT) with Apple Pay
(5, 3), -- Vending machine ID 5 (MINIGROUP) with PayNow
(6, 1), -- Vending machine ID 6 (MAJESTICTRADERSG) with Cash
(6, 2), -- Vending machine ID 6 (MAJESTICTRADERSG) Apple Pay
(6, 4); -- Vending machine ID 6 (MAJESTICTRADERSG) with PayNow
	SELECT *
		FROM vending_machine vm
		JOIN vending_payment vp ON vp.vending_id = vm.vending_machine_id
		JOIN location l ON l.location_id = vm.location_id
		JOIN payment_method ON payment_method.payment_id = vp.payment_id;